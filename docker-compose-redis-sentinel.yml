version: '3.8'

services:
  # redis-master:
  #   container_name: redis-master
  #   image: 'bitnami/redis:latest'
  #   environment:
  #     - REDIS_REPLICATION_MODE=master
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     # - REDIS_PASSWORD=redispassword
  #     # we can not use the default port 6379 here as the redis standalone test uses this port already
  #     - REDIS_PORT_NUMBER=6380
  #   ports:
  #     - "6380:6380"
  # redis-slave:
  #   container_name: redis-slave
  #   image: 'bitnami/redis:latest'
  #   environment:
  #     - REDIS_REPLICATION_MODE=slave
  #     - REDIS_MASTER_HOST=redis-master
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     # - REDIS_MASTER_PASSWORD=redispassword
  #     - REDIS_PASSWORD=redispassword
  #     - REDIS_MASTER_PORT_NUMBER=6380
  #     - REDIS_PORT_NUMBER=6380
  #   ports:
  #     - "16380:6380"
  #   depends_on:
  #     - redis-master
  # redis-sentinel-1:
  #   image: 'bitnami/redis-sentinel:latest'
  #   container_name: redis-sentinel-1
  #   environment:
  #     - REDIS_MASTER_SET=mymaster
  #     - REDIS_MASTER_HOST=redis-master
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     # - REDIS_MASTER_PASSWORD=redispassword
  #     - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
  #     - REDIS_MASTER_PORT_NUMBER=6380
  #     # - REDIS_SENTINEL_ANNOUNCE_IP=127.0.0.1
  #     # - REDIS_SENTINEL_ANNOUNCE_PORT=36379
  #   depends_on:
  #     - redis-master
  #     - redis-slave
  #   ports: 
  #      - "36379:26379"
  # redis-sentinel-2:
  #   image: 'bitnami/redis-sentinel:latest'
  #   container_name: redis-sentinel-2
  #   environment:
  #     - REDIS_MASTER_SET=mymaster
  #     - REDIS_MASTER_HOST=redis-master
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     # - REDIS_MASTER_PASSWORD=redispassword
  #     - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
  #     - REDIS_MASTER_PORT_NUMBER=6380
  #     # - REDIS_SENTINEL_ANNOUNCE_IP=127.0.0.1
  #     # - REDIS_SENTINEL_ANNOUNCE_PORT=36380
  #   depends_on:
  #     - redis-master
  #     - redis-slave
  #   ports: 
  #     - "36380:26379"
  # redis-sentinel-3:
  #   image: 'bitnami/redis-sentinel:latest'
  #   container_name: redis-sentinel-3
  #   environment:
  #     - REDIS_MASTER_SET=mymaster
  #     - REDIS_MASTER_HOST=redis-master
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     # - REDIS_MASTER_PASSWORD=redispassword
  #     - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
  #     - REDIS_MASTER_PORT_NUMBER=6380
  #     # - REDIS_SENTINEL_ANNOUNCE_IP=127.0.0.1
  #     # - REDIS_SENTINEL_ANNOUNCE_PORT=36381
  #   depends_on:
  #     - redis-master
  #     - redis-slave
  #   ports: 
  #     - "36381:26379"
  redis-master:
    image: redis:latest
    container_name: redis-master
    command:
      [
        "redis-server",
        "--port",
        "6380",
        "--protected-mode",
        "no"
      ]
    network_mode: host
    volumes:
      - redis_master:/data


  redis-slave-1:
    image: redis:latest
    container_name: redis-slave-1
    depends_on:
      - redis-master
    command:
      [
        "redis-server",
        "--port",
        "6381",
        "--replicaof",
        "127.0.0.1",
        "6380",
        "--protected-mode",
        "no"
      ]
    network_mode: host
    volumes:
      - redis_slave_1:/data


  redis-slave-2:
    image: redis:latest
    container_name: redis-slave-2
    depends_on:
      - redis-master
    command:
      [
        "redis-server",
        "--port",
        "6382",
        "--replicaof",
        "127.0.0.1",
        "6380",
        "--protected-mode",
        "no"
      ]
    network_mode: host
    volumes:
      - redis_slave_2:/data


  sentinel-1:
    image: redis:latest
    container_name: sentinel-1
    depends_on:
      - redis-master
    configs:
      - source: sentinel
        target: /data/sentinel.conf
        mode: 0660
        uid: "999"
    command:
      [
        "redis-server",
        "sentinel.conf",
        "--port",
        "26379",
        "--sentinel",
      ]
    network_mode: host
    ports:
      - "26379:26379"
    volumes:
      - sentinel_1:/data


  sentinel-2:
    image: redis:latest
    container_name: sentinel-2
    depends_on:
      - redis-master
    configs:
      - source: sentinel
        target: /data/sentinel.conf
        mode: 0660
        uid: "999"
    command:
      [
        "redis-server",
        "sentinel.conf",
        "--port",
        "26380",
        "--sentinel",
      ]
    network_mode: host
    volumes:
      - sentinel_2:/data


  sentinel-3:
    image: redis:latest
    container_name: sentinel-3
    depends_on:
      - redis-master
    configs:
      - source: sentinel
        target: /data/sentinel.conf
        mode: 0660
        uid: "999"
    command:
      [
        "redis-server",
        "sentinel.conf",
        "--port",
        "26381",
        "--sentinel",
      ]
    network_mode: host
    volumes:
      - sentinel_3:/data

volumes:
  redis_master:
  redis_slave_1:
  redis_slave_2:
  sentinel_1:
  sentinel_2:
  sentinel_3:

configs:
  sentinel:
    content: |
      bind 0.0.0.0
      sentinel monitor mymaster 127.0.0.1 6380 2
      sentinel resolve-hostnames yes
      sentinel down-after-milliseconds mymaster 5000
      sentinel failover-timeout mymaster 5000
      sentinel parallel-syncs mymaster 1